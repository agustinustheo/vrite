---
import { Card, Image } from "#components/primitives";
import { Observed } from "./observed";
import clsx from "clsx";

interface Props {
  header: string;
  imageAlt?: string;
  imageDark?: string;
  imageLight?: string;
  icon?: string;
  gradient?: boolean;
  reverse?: boolean;
  vertical?: boolean;
}

const { props } = Astro;
---

<Observed
  class="transform transition-all duration-500 ease-out"
  outOfViewClass="invisible translate-y-1/3"
  client:idle
>
  <Card
    class={clsx(
      "flex flex-col items-start justify-start w-full h-full p-4 m-0 md:p-8 overflow-hidden",
      !props.vertical && (props.reverse ? "md:flex-row-reverse" : "md:flex-row"),
      props.vertical ? "md:flex-col" : "md:flex-row"
    )}
    color={props.gradient ? "primary" : "base"}
  >
    <div
      class={clsx(
        "flex justify-center items-center h-full relative",
        !props.vertical && "md:p-12 md:flex-1"
      )}
    >
      <div class="flex flex-col justify-center items-start z-1">
        <h2
          class={clsx(
            "text-2xl md:text-3xl mt-2 !font-bold",
            props.gradient ? "" : "bg-clip-text text-transparent bg-gradient-to-tr"
          )}
        >
          {props.header}
        </h2>
        <div
          class={clsx(
            "mt-2 md:text-lg",
            props.gradient ? "" : "text-gray-600 dark:text-gray-200",
            !props.vertical && "max-w-[26rem]"
          )}
        >
          <slot />
        </div>
      </div>
    </div>
    {
      props.imageLight && props.imageDark && props.imageAlt ? (
        <div class={clsx(!props.vertical && "md:flex-1")}>
          <Image
            alt={props.imageAlt}
            srcDark={props.imageDark}
            srcLight={props.imageLight}
            class="gradient-image-mask rounded-xl"
          />
        </div>
      ) : (
        <slot name="visual" />
      )
    }
  </Card>
</Observed>
